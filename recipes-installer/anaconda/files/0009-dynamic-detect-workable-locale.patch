From bdc39fa5d40140a7e0184240e5106c46e31eabc9 Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Tue, 25 Jun 2019 11:05:39 +0800
Subject: [PATCH] dynamic detect workable locale

Upstream-Status: Inappropriate [oe specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>

Update context for anaconda 32.

Replace parse_langcode() with get_language_id().

Signed-off-by: Kai Kang <kai.kang@windriver.com>
---
 pyanaconda/localization.py                          | 18 +++++++++++++++++-
 pyanaconda/ui/gui/spokes/lib/lang_locale_handler.py |  2 ++
 pyanaconda/ui/tui/spokes/language_support.py        |  5 +++--
 3 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/pyanaconda/localization.py b/pyanaconda/localization.py
index 326bc145c..e9b84570a 100644
--- a/pyanaconda/localization.py
+++ b/pyanaconda/localization.py
@@ -27,7 +27,7 @@ import glob
 from collections import namedtuple
 
 from pyanaconda.core import constants, util
-from pyanaconda.core.util import upcase_first_letter, setenv, execWithRedirect
+from pyanaconda.core.util import upcase_first_letter, setenv, execWithRedirect, execReadlines
 from pyanaconda.modules.common.constants.services import BOSS
 
 from pyanaconda.anaconda_loggers import get_module_logger
@@ -712,3 +712,19 @@ def strip_codeset_and_modifier(locale):
     if '.' in locale:
         locale = locale[:locale.find('.')]
     return locale
+
+_all_locales = []
+def list_all_locales():
+    global _all_locales
+
+    if _all_locales == []:
+        for lang in execReadlines("locale", ["-a"]):
+            parts = langtable.parse_locale(lang)
+            locales = langtable.list_locales(languageId=parts.language,
+                                             territoryId=parts.territory,
+                                             scriptId=parts.script)
+            _all_locales += locales
+
+        log.info("all locales: %s" % _all_locales)
+
+    return _all_locales
diff --git a/pyanaconda/ui/gui/spokes/lib/lang_locale_handler.py b/pyanaconda/ui/gui/spokes/lib/lang_locale_handler.py
index cd265ff3b..4de373b22 100644
--- a/pyanaconda/ui/gui/spokes/lib/lang_locale_handler.py
+++ b/pyanaconda/ui/gui/spokes/lib/lang_locale_handler.py
@@ -167,6 +167,8 @@ class LangLocaleHandler(object):
         locales = localization.get_language_locales(lang)
         locales = self._filter_locales(lang, locales)
         for locale in locales:
+            if locale not in localization.list_all_locales():
+                continue
             self._add_locale(self._localeStore,
                              localization.get_native_name(locale),
                              locale)
diff --git a/pyanaconda/ui/tui/spokes/language_support.py b/pyanaconda/ui/tui/spokes/language_support.py
index c5cdbf154..1722880c1 100644
--- a/pyanaconda/ui/tui/spokes/language_support.py
+++ b/pyanaconda/ui/tui/spokes/language_support.py
@@ -96,8 +96,9 @@ class LangSpoke(FirstbootSpokeMixIn, NormalTUISpoke):
         if args:
             self.window.add(TextWidget(_("Available locales")))
             for locale in args:
-                widget = TextWidget(localization.get_english_name(locale))
-                self._container.add(widget, self._set_locales_callback, locale)
+                if locale in localization.list_all_locales():
+                    widget = TextWidget(localization.get_english_name(locale))
+                    self._container.add(widget, self._set_locales_callback, locale)
         else:
             self.window.add(TextWidget(_("Available languages")))
             for lang in self._langs:
-- 
2.7.4
