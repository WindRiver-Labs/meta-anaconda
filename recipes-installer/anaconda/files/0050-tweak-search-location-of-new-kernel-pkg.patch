From 4749c5a409cb2c121c575cb15118f1b8ff136d75 Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Sat, 29 Jun 2019 16:15:14 +0800
Subject: [PATCH] tweak search location of new-kernel-pkg

In OE, it locates /sbin rather than /usr/sbin

Upstream-Status: Inappropriate [oe specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>

Update patch context and replace path to new-kernel-pkg in other files
for anaconda 32. Replace obsolete function util.getSysroot() as well.

Signed-off-by: Kai Kang <kai.kang@windriver.com>
---
 pyanaconda/bootloader/grub2.py                     | 2 +-
 pyanaconda/bootloader/zipl.py                      | 2 +-
 pyanaconda/modules/payloads/base/initialization.py | 2 +-
 pyanaconda/modules/payloads/base/utils.py          | 2 +-
 pyanaconda/payload/__init__.py                     | 2 +-
 pyanaconda/payload/livepayload.py                  | 4 ++--
 6 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/pyanaconda/bootloader/grub2.py b/pyanaconda/bootloader/grub2.py
index a82c8d761d..1e8b6fa9fd 100644
--- a/pyanaconda/bootloader/grub2.py
+++ b/pyanaconda/bootloader/grub2.py
@@ -275,7 +275,7 @@ class GRUB2(BootLoader):
         defaults.write("GRUB_DISABLE_RECOVERY=\"true\"\n")
         #defaults.write("GRUB_THEME=\"/boot/grub2/themes/system/theme.txt\"\n")
 
-        if self.use_bls and os.path.exists(conf.target.system_root + "/usr/sbin/new-kernel-pkg"):
+        if self.use_bls and os.path.exists(conf.target.system_root + "/sbin/new-kernel-pkg"):
             log.warning("BLS support disabled due new-kernel-pkg being present")
             self.use_bls = False
 
diff --git a/pyanaconda/bootloader/zipl.py b/pyanaconda/bootloader/zipl.py
index 16622bd0a6..22455a1e14 100644
--- a/pyanaconda/bootloader/zipl.py
+++ b/pyanaconda/bootloader/zipl.py
@@ -131,7 +131,7 @@ class ZIPL(BootLoader):
                   "target=/boot\n")
         config.write(header.format(self.timeout))
 
-        if self.use_bls and os.path.exists(conf.target.system_root + "/usr/sbin/new-kernel-pkg"):
+        if self.use_bls and os.path.exists(conf.target.system_root + "/sbin/new-kernel-pkg"):
             log.warning("BLS support disabled due new-kernel-pkg being present")
             self.use_bls = False
 
diff --git a/pyanaconda/modules/payloads/base/initialization.py b/pyanaconda/modules/payloads/base/initialization.py
index 1c881a48bf..e7aa2f7f5d 100644
--- a/pyanaconda/modules/payloads/base/initialization.py
+++ b/pyanaconda/modules/payloads/base/initialization.py
@@ -78,7 +78,7 @@ class UpdateBLSConfigurationTask(Task):
     def run(self):
         """Run update of bls configuration."""
         # Not using BLS configuration, skip it
-        if os.path.exists(self._sysroot + "/usr/sbin/new-kernel-pkg"):
+        if os.path.exists(self._sysroot + "/sbin/new-kernel-pkg"):
             return
 
         # TODO: test if this is not a dir install
diff --git a/pyanaconda/modules/payloads/base/utils.py b/pyanaconda/modules/payloads/base/utils.py
index 39c106989b..d0e579e643 100644
--- a/pyanaconda/modules/payloads/base/utils.py
+++ b/pyanaconda/modules/payloads/base/utils.py
@@ -115,7 +115,7 @@ def create_rescue_image(root, kernel_version_list):
         os.unlink(root + "/etc/machine-id")
     execWithRedirect("systemd-machine-id-setup", [], root=root)
 
-    if os.path.exists(root + "/usr/sbin/new-kernel-pkg"):
+    if os.path.exists(root + "/sbin/new-kernel-pkg"):
         use_nkp = True
     else:
         log.warning("new-kernel-pkg does not exist - grubby wasn't installed?")
diff --git a/pyanaconda/payload/__init__.py b/pyanaconda/payload/__init__.py
index dfe9e16b27..7eec140d54 100644
--- a/pyanaconda/payload/__init__.py
+++ b/pyanaconda/payload/__init__.py
@@ -524,7 +524,7 @@ class Payload(metaclass=ABCMeta):
 
         :returns: None
         """
-        if os.path.exists(conf.target.system_root + "/usr/sbin/new-kernel-pkg"):
+        if os.path.exists(conf.target.system_root + "/sbin/new-kernel-pkg"):
             use_dracut = False
         else:
             log.debug("new-kernel-pkg does not exist, using dracut instead.")
diff --git a/pyanaconda/payload/livepayload.py b/pyanaconda/payload/livepayload.py
index 864ca6fedf..951fe10d7b 100644
--- a/pyanaconda/payload/livepayload.py
+++ b/pyanaconda/payload/livepayload.py
@@ -180,7 +180,7 @@ class LiveImagePayload(Payload):
             os.unlink(conf.target.system_root + "/etc/machine-id")
         util.execInSysroot("systemd-machine-id-setup", [])
 
-        if os.path.exists(conf.target.system_root + "/usr/sbin/new-kernel-pkg"):
+        if os.path.exists(conf.target.system_root + "/sbin/new-kernel-pkg"):
             use_nkp = True
         else:
             log.debug("new-kernel-pkg does not exist, calling scripts directly.")
@@ -208,7 +208,7 @@ class LiveImagePayload(Payload):
         super().post_install()
 
         # Not using BLS configuration, skip it
-        if os.path.exists(conf.target.system_root + "/usr/sbin/new-kernel-pkg"):
+        if os.path.exists(conf.target.system_root + "/sbin/new-kernel-pkg"):
             return
 
         # Remove any existing BLS entries, they will not match the new system's
-- 
2.7.4
